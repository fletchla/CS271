// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(in=load,sel[0]=address[0],sel[1]=address[1],sel[2]=address[2],a=dmuxZero,b=dmuxOne,c=dmuxTwo,d=dmuxThree,e=dmuxFour,f=dmuxFive,g=dmuxSix,h=dmuxSeven);
	Register(in=in,load=dmuxZero,out=regOneOut);
	Register(in=in,load=dmuxOne,out=regTwoOut);
	Register(in=in,load=dmuxTwo,out=regThreeOut);
	Register(in=in,load=dmuxThree,out=regFourOut);
	Register(in=in,load=dmuxFour,out=regFiveOut);
	Register(in=in,load=dmuxFive,out=regSixOut);
	Register(in=in,load=dmuxSix,out=regSevenOut);
	Register(in=in,load=dmuxSeven,out=regEightOut);
	Mux8Way16(a=regOneOut,b=regTwoOut,c=regThreeOut,d=regFourOut,e=regFiveOut,f=regSixOut,g=regSevenOut,h=regEightOut,sel[0]=address[0],sel[1]=address[1],sel[2]=address[2],out=out);
}